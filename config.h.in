/* config.h.in.  Generated automatically from configure.in by autoheader.  */
/* Turn off the GCC specific __attribute__ keyword */
#if !defined (__GNUC__) || __GNUC__ < 2
# define __attribute__(x)
#endif


/* Define to empty if the keyword does not work.  */
#undef const

/* Define if your struct tm has tm_zone.  */
#undef HAVE_TM_ZONE

/* Define if you don't have tm_zone but do have the external array
   tzname.  */
#undef HAVE_TZNAME

/* Define as __inline if that's what the C compiler calls it.  */
#undef inline

/* Define if you have the ANSI C header files.  */
#undef STDC_HEADERS

/* Define if you can safely include both <sys/time.h> and <time.h>.  */
#undef TIME_WITH_SYS_TIME

/* Define if your <sys/time.h> declares struct tm.  */
#undef TM_IN_SYS_TIME

/* The number of bytes in a int.  */
#undef SIZEOF_INT

/* The number of bytes in a long.  */
#undef SIZEOF_LONG

/* Define if you have the gethostname function.  */
#undef HAVE_GETHOSTNAME

/* Define if you have the localtime function.  */
#undef HAVE_LOCALTIME

/* Define if you have the snprintf function.  */
#undef HAVE_SNPRINTF

/* Define if you have the strcasecmp function.  */
#undef HAVE_STRCASECMP

/* Define if you have the strdup function.  */
#undef HAVE_STRDUP

/* Define if you have the strerror function.  */
#undef HAVE_STRERROR

/* Define if you have the strerror_r function.  */
#undef HAVE_STRERROR_R

/* Define if you have the strncasecmp function.  */
#undef HAVE_STRNCASECMP

/* Define if you have the strndup function.  */
#undef HAVE_STRNDUP

/* Define if you have the strtol function.  */
#undef HAVE_STRTOL

/* Define if you have the uname function.  */
#undef HAVE_UNAME

/* Define if you have the <dlfcn.h> header file.  */
#undef HAVE_DLFCN_H

/* Define if you have the <lwres/netdb.h> header file.  */
#undef HAVE_LWRES_NETDB_H

/* Define if you have the <sys/ioctl.h> header file.  */
#undef HAVE_SYS_IOCTL_H

/* Define if you have the <unistd.h> header file.  */
#undef HAVE_UNISTD_H

/* Define if you have the lwres library (-llwres).  */
#undef HAVE_LIBLWRES

/* Name of package */
#undef PACKAGE

/* Version number of package */
#undef VERSION

/* Sun's netdb.h needs this for getaddrinfo */
#undef __EXTENSIONS__

/* OSF needs this for getaddrinfo */
#undef _OSF_SOURCE

/* GNU needs this for strcasecmp etc */
#undef _GNU_SOURCE

/* ISO compliant code */
#undef _ISOC9X_SOURCE

/* POSIX compliant code */
#undef _POSIX_C_SOURCE

/* Single Unix conformance */
#undef _XOPEN_SOURCE

/* the dlsym() function is available */
#undef HAVE_DLSYM

/* Define to the necessary symbol if this constant
                           uses a non-standard name on your system. */
#undef PTHREAD_CREATE_JOINABLE

/* Build with support for Posix threading */
#undef USE_PTHREADS

/* Does system provide RFC 2553/Posix getaddrinfo? */
#undef HAVE_GETADDRINFO

/* Set when getipnodebyname is available */
#undef HAVE_GETIPNODEBYNAME

/* Number of parameters to gethostbyname_r or 0 if not available */
#undef HAVE_GETHOSTBYNAME_R

/* Enable IPv6 support */
#undef USE_IPV6

/* Build with support for SMTP AUTH using SASL */
#undef USE_SASL

/* location of authentication plugins. */
#undef AUTHPLUGINDIR

/* Set when -lcrypto from OpenSSL is available */
#undef HAVE_LIBCRYPTO

/* Build with support for SMTP STARTTLS extension */
#undef USE_TLS

/* Enable experimental support for SMTP STARTTLS extension */
#undef USE_ETRN

/* Enable support for sendmail XUSR extension */
#undef USE_XUSR

/* support non-standard EHLO AUTH= response */
#undef AUTH_ID_HACK

/* Build smtp_option_require_all_recipients() API */
#undef USE_REQUIRE_ALL_RECIPIENTS

/* Enable additional debugging code */
#undef DEBUG

/* Disable assertions */
#undef NDEBUG

/* Set when localtime_r is available */
#undef HAVE_LOCALTIME_R

/* strerror_r works! */
#undef HAVE_WORKING_STRERROR_R


#ifndef HAVE_STRCASECMP
int strcasecmp (const char *a, const char *b);
#endif
#ifndef HAVE_STRNCASECMP
int strncasecmp (const char *a, const char *b, size_t len);
#endif
#ifndef HAVE_STRNDUP
char *strndup (const char *string, size_t length);
#endif
